# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="/home/yyildirim/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"
alias update_theme="git -C ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k pull"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
 DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(git kubectl oc sudo zsh-completions zsh-syntax-highlighting history-substring-search zsh-autosuggestions zsh-z systemadmin)


#zsh-kubectl-prompt
source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='nvim'
 else
   export EDITOR='nvim'
 fi

# Compilation flags
export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

### CPU turboboost enable disable commands
#alias noturbo="echo '0' | sudo tee /sys/devices/system/cpu/cpufreq/boost"
#alias turbo="echo '1' | sudo tee /sys/devices/system/cpu/cpufreq/boost"

alias check_q30_bat="/home/yyildirim/Documents/repos/HOME/Bluetooth_Headset_Battery_Level/bluetooth_battery.py 88:D0:39:D6:BF:3D"
alias check_liberty4_bat="/home/yyildirim/Documents/repos/HOME/Bluetooth_Headset_Battery_Level/bluetooth_battery.py E8:EE:CC:4A:6A:2C"

source ~/.profile

### Fixes systemctl command completion error
_systemctl_unit_state() {
  typeset -gA _sys_unit_state
  _sys_unit_state=( $(__systemctl list-unit-files "$PREFIX*" | awk '{print $1, $2}') ) }


#eval $(thefuck --alias)

source /home/yyildirim/.zsh_aliases

##### Alias for kube_parser 
alias kbp="python3 ~/kube_parser.py"

#### Path settings kubernetes krew plugins directory
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

### Alias for translate commands
alias transtren="trans -brief tr:en"
alias transentr="trans -brief en:tr"

## Alias for turning off the Thinkpad's power button light
alias powerlidoff="echo 0 | sudo tee  /sys/class/leds/tpacpi::power/brightness"

### Function for change kubernetes namespace
function chgns () {
    kubectl config set-context --current --namespace=$@
}

#function kubevalidate () {
#    kubeval --strict --output=json $@
#      result=$?
#    if ! [ $result -eq 0 ]; then 
#        echo "\nCheck yaml, something wrong!"
#    fi
#}

alias dunst_pause='killall -SIGUSR1 dunst'
alias dunst_resume='killall -SIGUSR2 dunst'

function memps20 {
    ps -ax --no-headers --format=pid,rss,command --sort=-rss,pid | head -20 | awk 'BEGIN{suffixes_len=split("kB MB GB TB",suffixes)} {n_suffix=1; while($2 > 1000 && n_suffix < suffixes_len) {$2 /= 1024; n_suffix++;}; printf "%5s %7.2f %2s %s\n",$1,$2,suffixes[n_suffix],substr($0, index($0,$3))}'
}

export HISTSIZE=1000000000
export SAVEHIST=$HISTSIZE
setopt EXTENDED_HISTORY
setopt HIST_FIND_NO_DUPS
setopt INC_APPEND_HISTORY
export HISTTIMEFORMAT="[%F %T] "

# alias ls="ls -Ahls --color --group-directories-first"
#
#function long_ls {
#if [ ! "${1}" ]; then
#   ls -Ahls --color --group-directories-first
#else
#   ls -Ahls --color --group-directories-first "${1}"
#fi
#}
#alias lls="long_ls ${1}"

alias e=exit

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
#export PATH="$PATH:$HOME/.rvm/bin"

export ATUIN_NOBIND="true"
eval "$(atuin init zsh)"
bindkey '^r' _atuin_search_widget
_zsh_autosuggest_strategy_atuin() {
    suggestion=$(atuin search --cmd-only --limit 1 --search-mode prefix -- "$1")
}

# Create directory and perform cd that directory :) Easier than ${mkdir /path; cd /path}
function mkdircd () { mkdir -pv "$@" && eval cd "\"\$$#\""; echo "The workdir has been changed to $(pwd)" }
alias mdcd="mkdircd"

# Get deployments image fields and parse it to get the image name and tag

function getimage() {search_string=$(echo $1|cut -d'-' -f2);kubectl get deployments $1 -oyaml | grep  "image:.*$search_string\|$search_string.*image:"|cut -d/ -f2}
# get zsh complete kubectl
source <(kubectl completion zsh)
source <(oc completion zsh)
# alias kubectl=kubecolor
# make completion work with kubecolor
# compdef kubecolor=kubectl

#compdef nala

# Supermicro IPMI Fan Control Alias
alias alrai_ipmi_meeting_mode="/home/yyildirim/Documents/Applications/SuperMicroIPMI/SMCIPMITool/SMCIPMITool 192.168.8.31 ADMIN 'AJ8R#DcW' ipmi raw 30 70 66 01 00 20"
alias alrai_ipmi_optimal_mode="/home/yyildirim/Documents/Applications/SuperMicroIPMI/SMCIPMITool/SMCIPMITool 192.168.8.31 ADMIN 'AJ8R#DcW' ipmi raw 30 45 00 02"
#https://forums.servethehome.com/index.php?resources/supermicro-x9-x10-x11-fan-speed-control.20/

#_nala_completion() {
#  eval $(env _TYPER_COMPLETE_ARGS="${words[1,$CURRENT]}" _NALA_COMPLETE=complete_zsh nala)
#}

#compdef _nala_completion nala

### Added by Zinit's installer
#if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
#    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
#    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
#    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
#        print -P "%F{33} %F{34}Installation successful.%f%b" || \
#        print -P "%F{160} The clone has failed.%f%b"
#fi
#
#source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
#autoload -Uz _zinit
#(( ${+_comps} )) && _comps[zinit]=_zinit
#
#
### End of Zinit's installer chunk

#PATH="/home/yyildirim/perl5/bin${PATH:+:${PATH}}"; export PATH;
#PERL5LIB="/home/yyildirim/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
#PERL_LOCAL_LIB_ROOT="/home/yyildirim/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
#PERL_MB_OPT="--install_base \"/home/yyildirim/perl5\""; export PERL_MB_OPT;
#PERL_MM_OPT="INSTALL_BASE=/home/yyildirim/perl5"; export PERL_MM_OPT;

## Styling
zstyle ':completion:*' menu select

#VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
#export WORKON_HOME=$HOME/.virtualenvs
#source /usr/bin/virtualenvwrapper.sh

#export PATH=$PATH:/home/yyildirim/.linkerd2/bin

function histdir() {
  atuin history list --format "{time} - {command} - {directory}"| grep "$1"
}
export SPARK_HOME=/opt/spark-341 #246
export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin

function setgov ()
{
    echo "$1" | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor 
}

# >>>> Vagrant command completion (start)
#fpath=(/opt/vagrant/embedded/gems/gems/vagrant-2.3.7/contrib/zsh $fpath)
#compinit
# <<<<  Vagrant command completion (end)
#source <(argocd completion zsh)
#source ~/.clisnips.zsh
source ~/.zsh_profile
